name: 'api deployment'
description: 'api build'
inputs:
  IMAGE:
    required: true
    description: image to use
  VERSION:
    required: true
    description: build version
  EVENT:
    required: true
    description: event that trigered job
outputs:
  random-number:
    description: "Random number"
    value: ${{ steps.random-number-generator.outputs.random-number }}


runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v3
    - run: |
        apt update && apt install awscli -y
        aws ecr get-login-password --region ${{secrets.AWS_DEFAULT_REGION}} | docker login --username AWS --password-stdin ${{secrets.AWS_ECR_URL}} 
      shell: bash
    - run: |
          if [ "${{ inputs.EVENT }}" == "push" ]; then 
            export VERSION=${{ inputs.VERSION }}
            export DOCKER_BUILDKIT=1 && ./scripts/run-tests.sh
          fi
      shell: bash
    - run: |
          if [ "${{ inputs.EVENT }}" == "pull_request" ]; then 
            export VERSION=${{ inputs.VERSION }}
            export DOCKER_BUILDKIT=1 && ./scripts/run-tests.sh
          fi
      shell: bash



# jobs:
#   ecrlogin:
#     name: AWS ECR login
#     if: inputs.EVENT == 'workflow_dispatch' || inputs.EVENT == 'push'
#     runs-on: self-hosted
#     steps:
#       - name: ECR Login
#         run: |
#           apt update && apt install awscli -y
#           aws ecr get-login-password --region ${{secrets.AWS_DEFAULT_REGION}} | docker login --username AWS --password-stdin ${{secrets.AWS_ECR_URL}} 
  
    
#   build_api:
#     name: api build
#     needs: ecrlogin
#     if: inputs.EVENT == 'workflow_dispatch' || inputs.EVENT == 'push'
#     runs-on: self-hosted
#     container:
#       image: ${{ inputs.IMAGE }}
#     steps:
#       - name: build
#         run: |
#           export VERSION=${{ inputs.VERSION }}
#           export DOCKER_BUILDKIT=1 && ./scripts/run-tests.sh
  

#   test_api:
#     name: api build
#     if: inputs.EVENT == 'pull_request'
#     runs-on: self-hosted
#     container:
#       image: ${{ inputs.IMAGE }}
#     steps:
#       - name: test
#         run: |
#           export VERSION=${{ inputs.VERSION }}
#           export DOCKER_BUILDKIT=1 && ./scripts/run-tests.sh